#Preview("Garage") {
    GarageView()
        .modelContainer(PreviewSampleData.container)
}


#Preview("Fuel Log (car)") {
    let car: Car = PreviewSampleData.first(Car.self)
    return FuelLogView(car: car)
        .modelContainer(PreviewSampleData.container)
}

#Preview("Fuel Log (all)") {
    FuelLogView()
        .modelContainer(PreviewSampleData.container)
}


#Preview("Fuel Card") {
    // Grab a sample expense from the preview container
    let ctx = ModelContext(PreviewSampleData.container)
    let expense = try! ctx.fetch(FetchDescriptor<FuelExpense>(sortBy: [SortDescriptor(\.date, order: .reverse)])).first!
    return FuelCard(item: expense)
        .modelContainer(PreviewSampleData.container)
        .padding()
        .background(Color(.systemGroupedBackground))
}


#Preview("Add Fuel") {
    let car: Car = PreviewSampleData.first(Car.self)
    return AddFuelEntrySheet(car: car)
        .modelContainer(PreviewSampleData.container)
}


#Preview("Registration") {
    RegistrationView()
        .modelContainer(PreviewSampleData.container)
}


#Preview("Add Registration") {
    let car: Car = PreviewSampleData.first(Car.self)
    return AddRegistrationSheet(defaultCar: car)
        .modelContainer(PreviewSampleData.container)
}


#Preview("Service History") {
    ServiceHistoryView()
        .modelContainer(PreviewSampleData.container)
}


#Preview("Schedule") {
    ScheduleView()
        .modelContainer(PreviewSampleData.container)
}


#Preview("Policy Detail") {
    let ctx = ModelContext(PreviewSampleData.container)
    let policy = try! ctx.fetch(FetchDescriptor<InsurancePolicy>()).first!
    return PolicyDetailView(policy: policy)
        .modelContainer(PreviewSampleData.container)
}


#Preview("Tires") {
    TiresView()
        .modelContainer(PreviewSampleData.container)
}


#Preview("Scan VIN") {
    ScanVINView()
        .modelContainer(PreviewSampleData.container)
}


#Preview("Claim Photos") {
    ClaimPhotosView()
        .modelContainer(PreviewSampleData.container)
}

